// development:
// @use "node_modules/@heymarco/scss-utils/index" as *;
// @use "node_modules/@heymarco/colors/index" as col;
// @use "node_modules/@heymarco/container/index" as container;
// @use "node_modules/@heymarco/card/index" as card;

// production:
@use "../../../node_modules/@heymarco/scss-utils/index" as *;
@use "../../../node_modules/@heymarco/colors/index" as col;
@use "../../../node_modules/@heymarco/container/index" as container;
@use "../../../node_modules/@heymarco/card/index" as card;



$var-root           : ":root"           !default;
$var-prefix         : "modal-theme"     !default;
$cssvar: "";
@if (($var-prefix == null) or ($var-prefix == "")) {
    $cssvar: "--";
} @else {
    $cssvar: "--#{$var-prefix}-";
}

$enable-extends-card        : true      !default;
$enable-blur-background     : true      !default;
$enable-blur-background-alt : true      !default;

$width                      : max-content                                                               !default; // the width is the maximum required content's space
$height                     : unset                                                                     !default;                            
$max-width                  : calc(100vw - (var(#{container.$cssvar}x) * 2))                            !default; // the max-width is the page's width minus 2x --container-x
$max-height                 : calc(var(--viewport-height, 100vh) - (var(#{container.$cssvar}y) * 2))    !default; // the max-height is the page's height minus 2x --container-y
$shadow                     : 0px 0px #{rems(24/*px*/)} 0 var(#{col.$cssvar}black)                      !default; // create shadow surrounding the content, so it appears floating

// set how fast the popping-in animation:
$show-delay                 : 0ms           !default;
$show-duration              : 300ms         !default;
$show-scale-start           : scale(0)      !default;
$show-scale-end             : scale(1.1)    !default;

// set how fast the popping-out animation:
$hide-delay                 : 0ms           !default;
$hide-duration              : 500ms         !default;
$hide-scale-start           : scale(1.1)    !default;
$hide-scale-end             : scale(0)      !default;



@if ($var-root) { #{$var-root} {
    #{$cssvar}width             : #{$width};
    #{$cssvar}height            : #{$height};
    #{$cssvar}max-width         : #{$max-width};
    #{$cssvar}max-height        : #{$max-height};
    #{$cssvar}shadow            : #{$shadow};

    #{$cssvar}show-delay        : #{$show-delay};
    #{$cssvar}show-duration     : #{$show-duration};
    #{$cssvar}show-scale-start  : #{$show-scale-start};
    #{$cssvar}show-scale-end    : #{$show-scale-end};
    
    #{$cssvar}hide-delay        : #{$hide-delay};
    #{$cssvar}hide-duration     : #{$hide-duration};
    #{$cssvar}hide-scale-start  : #{$hide-scale-start};
    #{$cssvar}hide-scale-end    : #{$hide-scale-end};
}}



/// a theme definition for the modal's background.
@mixin overlay {
    // blur the background
    // TODO: sorry I still use `sass variable` to modify the background.
    // configurable via `css variable` might coming soon.
    @if ($enable-blur-background == true) {
        @include col.bg-blur-fross-thick;
    
        // if browser doesn't support background blur, fallback to darken the background
        @if ($enable-blur-background-alt == true) {
            @supports not (backdrop-filter: blur(5px)) {
                background-color: change-color(#303030, $alpha: 0.75);
            }
        }
    }
}

/// a theme definition for the modal's background when expanded.
@mixin overlay-expand {
    /* begin: smooth transition from 0% visible to 100% visible */
    animation-duration          : var(#{$cssvar}show-duration);
    animation-timing-function   : ease-in-out;
    animation-delay             : var(#{$cssvar}show-delay);
    animation-iteration-count   : 1;
    animation-fill-mode         : both;
    animation-name              : #{$var-prefix}-overlay-expand;
    @keyframes #{$var-prefix}-overlay-expand {
        0% {
            opacity: 0;
        }

        100% {
            opacity: 1;
        }
    }
    /* end: smooth transition from 0% visible to 100% visible */
}

/// a theme definition for the modal's background when collapsed.
@mixin overlay-collapse {
    display: flex !important; // prevent the hidden state, so we can show the hidding animation before completely hidden


    /* begin: smooth transition from 100% visible to 0% visible */
    animation-duration          : var(#{$cssvar}hide-duration);
    animation-timing-function   : ease-in-out;
    animation-delay             : var(#{$cssvar}hide-delay);
    animation-iteration-count   : 1;
    animation-fill-mode         : both;
    animation-name              : #{$var-prefix}-overlay-collapse;
    @keyframes #{$var-prefix}-overlay-collapse {
        0% {
            // firstly, animation starts fully opaque:
            opacity: 1;


            // animation starts at visible state:
            visibility: visible;
        }

        100% {
            // then gradually changed to fully hidden and the location slided out to right:
            opacity: 0;


            // animation was completed, now it's time to set completely hidden:
            visibility: hidden;
            display: none !important;
        }
    }
    /* end: smooth transition from 100% visible to 0% visible */
}


/// a theme definition for the modal's content.
@mixin content {
    @if ($enable-extends-card == true) {
        @if (card.$class && (card.$class != "")) {
            @extend #{card.$class};
        }
        @else {
            @include card.card;
        }

        @if (card.$enable-clip-radius != true) {
            overflow: auto; // enable scrollbar
        }
    }



    width       : var(#{$cssvar}width);
    height      : var(#{$cssvar}height);
    max-width   : var(#{$cssvar}max-width);
    max-height  : var(#{$cssvar}max-height);
    box-shadow  : var(#{$cssvar}shadow);
}

/// a theme definition for the modal's content when expanded.
@mixin content-expand {
    /* begin: popping in animation */
    animation-duration          : var(#{$cssvar}show-duration);
    animation-timing-function   : ease-in-out;
    animation-delay             : var(#{$cssvar}show-delay);
    animation-iteration-count   : 1;
    animation-fill-mode         : both;
    animation-name              : #{$var-prefix}-expand;
    @keyframes #{$var-prefix}-expand {
        0% {
            transform: var(#{$cssvar}show-scale-start);
        }

        70% {
            transform: var(#{$cssvar}show-scale-end);
        }

        100% {
            transform: unset;
        }
    }
    /* end: popping in animation */
}

/// a theme definition for the modal's content when collapsed.
@mixin content-collapse {
    /* begin: popping out animation */
    animation-duration          : var(#{$cssvar}hide-duration);
    animation-timing-function   : ease-in-out;
    animation-delay             : var(#{$cssvar}hide-delay);
    animation-iteration-count   : 1;
    animation-fill-mode         : both;
    animation-name              : #{$var-prefix}-collapse;
    @keyframes #{$var-prefix}-collapse {
        0% {
            transform: unset;
        }

        30% {
            transform: var(#{$cssvar}hide-scale-start);
        }

        100% {
            transform: var(#{$cssvar}hide-scale-end);
        }
    }
    /* end: popping out animation */
}
